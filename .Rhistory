child_bag_counts(children_data)
View(data_children)
View(children_data)
View(children_data)
child_bag_counts <- function(data, string = "shiny gold", total = 0) {
next_ones <- data %>%
filter(parent %in% string)
curr_count <- data %>%
filter(parent %in% string) %>%
summarise(num_bags = sum(num_bags)) %>%
pluck(1)
if (nrow(next_ones) > 0) {
total <- total + curr_count + length(string)
child_bag_counts(data, next_ones$child, total)
}
else {
total  + length(string)
}
}
child_bag_counts(children_data)
child_bag_counts <- function(data, string = "shiny gold", total = 0) {
next_ones <- data %>%
filter(parent %in% string)
curr_count <- data %>%
filter(parent %in% string) %>%
summarise(num_bags = sum(num_bags)) %>%
pluck(1)
if (nrow(next_ones) > 0) {
total <- total + curr_count + length(string)
child_bag_counts(data, next_ones$child, total)
}
else {
total
}
}
child_bag_counts(children_data)
View(children_data)
child_bag_counts <- function(data, string = "shiny gold", total = 0) {
next_ones <- data %>%
filter(parent %in% string)
curr_count <- data %>%
filter(parent %in% string) %>%
summarise(num_bags = sum(num_bags)) %>%
pluck(1)
if (nrow(next_ones) > 0) {
total <- total + curr_count
child_bag_counts(data, next_ones$child, total)
}
else {
total
}
}
child_bag_counts(children_data)
View(children_data)
child_bag_counts <- function(data, string = "shiny gold", total = 0) {
next_ones <- data %>%
filter(parent %in% string)
curr_count <- data %>%
filter(parent %in% string) %>%
summarise(num_bags = sum(num_bags)) %>%
pluck(1)
if (nrow(next_ones) > 0) {
total <- total*curr_count
child_bag_counts(data, next_ones$child, total)
}
else {
total
}
}
child_bag_counts(children_data)
child_bag_counts <- function(data, string = "shiny gold", total = 0) {
next_ones <- data %>%
filter(parent %in% string)
curr_count <- data %>%
filter(parent %in% string) %>%
summarise(num_bags = sum(num_bags)) %>%
pluck(1)
if (nrow(next_ones) > 0) {
total <- 1*curr_count
child_bag_counts(data, next_ones$child, total)
}
else {
total
}
}
child_bag_counts(children_data)
child_bag_counts <- function(data, string = "shiny gold", total = 1) {
next_ones <- data %>%
filter(parent %in% string)
curr_count <- data %>%
filter(parent %in% string) %>%
summarise(num_bags = sum(num_bags)) %>%
pluck(1)
if (nrow(next_ones) > 0) {
total <- total*curr_count
child_bag_counts(data, next_ones$child, total)
}
else {
total
}
}
child_bag_counts(children_data)
child_bag_counts <- function(data, string = "shiny gold", total =0) {
next_ones <- data %>%
filter(parent %in% string)
curr_count <- data %>%
filter(parent %in% string) %>%
summarise(num_bags = sum(num_bags)) %>%
pluck(1)
if (nrow(next_ones) > 0) {
total <- total + curr_count*length(string)
child_bag_counts(data, next_ones$child, total)
}
else {
total
}
}
child_bag_counts(children_data)
names(children_data$parent) <- children_data$child
parent_list <- children_data$parent
names(parent_list) <- children_data$child
parent_list['shiny']
parent_list['shiny lime']
parent_list['shiny gold']
children_data %>%
View()
children_data %>%
group_by(parent) %>%
summarise(child = list(child)) %>%
View()
children_data %>%
group_by(parent) %>%
summarise(child = list(child), counts = list(num_bags)) %>%
View()
children_data %>%
group_by(parent) %>%
summarise(child = list(child), counts = list(num_bags)) %>%
mutate(child = setNames(child, num_bags)) %>%
View()
children_data %>%
group_by(parent) %>%
summarise(child = list(child), counts = list(num_bags)) %>%
mutate(child = setNames(child, counts)) %>%
View()
test <- children_data %>%
group_by(parent) %>%
summarise(child = list(child), counts = list(num_bags)) %>%
mutate(child = setNames(child, counts))
test <- children_data %>%
group_by(parent) %>%
summarise(child = list(child), counts = list(num_bags)) %>%
mutate(child = setNames(counts, child))
parent_list['shiny_gold']
children_data$child['shiny_gold']
children_data$parent['shiny gold']
children <- children_data$child
names(children) <- children_data$parent
children['shiny gold']
View(children_data)
children['shiny gold'][2]
children['shiny gold']
test <- children_data %>%
group_by(parent) %>%
summarise(child = list(child), counts = list(num_bags)) %>%
mutate(child = setNames(counts, child))
test$child
children  <- test$child
names(children) <- test$parent
children
children['shiny gold']
children_2  <- test$counts
children_1  <- test$child
names(children_1) <- test$parent
names(children_2) <- test$child
children_1['shiny_gold']
children_2['shiny_gold']
children_1
children_1['wavy yellow']
children_2['wavy yellow']
test$child
summarise(child = list(child), counts = list(num_bags
test <- children_data %>%
group_by(parent) %>%
summarise(child = list(child), counts = list(num_bags))
children_1  <- test$child
children_2  <- test$counts
names(children_1) <- test$parent
names(children_2) <- test$child
children_2
children_1
children_1['shiny_gold']
children_1['wavy violet']
children_1['wavy yellow']
children_2[[1]]
children_2[[2]]
name(children_2[[2]])
names(children_2[[2]])
names(children_2[2])
names(children_2[23])
names(children_2[3])
names(children_2[4])
children_1
children_1['shiny gold']
counts  <- test$counts
View(counts)
names(counts) <- test$parent
counts['shiny gold']
children  <- test$child
counts  <- test$counts
prod(counts['shiny gold'])
prod(unlist(counts['shiny gold']))
(counts['shiny gold'])
counts['shiny gold']
ccounts['shiny gold']
counts['shiny gold']
counts  <- test$counts
names(children_1) <- test$parent
names(counts) <- test$parent
counts['shiny gold']
unlist(counts['shiny gold'])
as.numeric(unlist(counts['shiny gold']))
prod(as.numeric(unlist(counts['shiny gold'])))
children['shiny gold']
children
data <- read_lines(here::here("2020", "Inputs", "day_7.txt"))  %>%
tibble(text = .) %>%
separate(text, into = c("type", "contains"), sep = "contain") %>%
mutate(contains = str_remove_all(contains, "bags|bag"),
type = str_trim(str_remove_all(type, "bags|bag")))
find_parents <- function(data, start_bag) {
matches <- which(str_detect(data$contains, start_bag))
if (length(matches) > 0) {
names(matches) <- matches
all <- map(matches, ~ find_parents(data, data$type[.]))
}
all
}
parents <- find_parents(data, "shiny gold")
parent_names <- names(unlist(parents))
length(unique(unlist(str_split(parent_names, "\\."))))
children_data <- data %>%
rename(parent = 1, child = 2) %>%
separate_rows(child, sep = ",") %>%
mutate(num_bags = as.numeric(str_extract(child, "[0-9]{1}"))) %>%
mutate(child = str_trim(str_remove_all(child, "[0-9]|\\."))) %>%
drop_na(ch)
children  <- test$child
counts  <- test$counts
names(children_1) <- test$parent
names(counts) <- test$parent
children  <- test$child
counts  <- test$counts
names(children) <- test$parent
names(counts) <- test$parent
children['shiny gold']
length(children['shiny gold'])
parent_child <- children_data %>%
group_by(parent) %>%
summarise(child = list(child), counts = list(num_bags))
children  <- parent_child$child
counts  <- parent_child$counts
names(children) <- test$parent
names(counts) <- test$parent
children['shiny_gold']
children  <- parent_child$child
counts  <- parent_child$counts
names(children) <- parent_child$parent
names(counts) <- parent_child$parent
children
children['shiny gold']
children['wavy white']
child_bag_counts <- function(children, counts, string = "shiny gold", total = 0) {
children[string]
}
child_bag_counts(children, counts)
child_bag_counts <- function(children, counts, string = "shiny gold", total = 0) {
counts[string]
}
child_bag_counts(children, counts)
child_bag_counts <- function(children, counts, string = "shiny gold", total = 0) {
prod(as.numeric(counts[string]))
}
child_bag_counts(children, counts)
child_bag_counts <- function(children, counts, string = "shiny gold", total = 0) {
prod(as.numeric(unlist((counts[string]))))
}
child_bag_counts(children, counts)
child_bag_counts <- function(children, counts, string = "shiny gold", total = 0) {
if (is.na(children[string])) {
total
}
else  {
total <- total + prod(as.numeric(unlist((counts[string]))))
for (child in children[string]) {
child_bag_counts(children, counts, string = child)
}
}
}
child_bag_counts(children, counts)
children['kevin']
child_bag_counts <- function(children, counts, string = "shiny gold", total = 0) {
if (is.null(children[string])) {
total
}
else  {
total <- total + prod(as.numeric(unlist((counts[string]))))
for (child in children[string]) {
child_bag_counts(children, counts, string = child)
}
}
}
child_bag_counts(children, counts)
test <- child_bag_counts(children, counts)
child_bag_counts <- function(children, counts, string = "shiny gold", total = 0) {
if (is.null(children[string])) {
total
}
else  {
total <- total + prod(as.numeric(unlist((counts[string]))))*length(counts[string])
for (child in children[string]) {
child_bag_counts(children, counts, string = child)
}
}
}
test <- child_bag_counts(children, counts)
child_bag_counts <- function(children, counts, string = "shiny gold", total = 0) {
if (is.null(children[string])) {
total
}
else  {
total <- total + prod(as.numeric(unlist((counts[string]))))*length(counts[string])
for (child in children[string]) {
child_bag_counts(children, counts, string = child, total = total)
}
}
}
test <- child_bag_counts(children, counts)
child_bag_counts <- function(children, counts, string = "shiny gold", total = 0) {
if (is.null(children[string])) {
total
}
else  {
print("proceeds")
total <- total + prod(as.numeric(unlist((counts[string]))))*length(counts[string])
for (child in children[string]) {
child_bag_counts(children, counts, string = child, total = total)
}
}
}
test <- child_bag_counts(children, counts)
child_bag_counts <- function(children, counts, string = "shiny gold", total = 0) {
if (is.null(children[string])) {
total
}
else  {
print("proceeds")
total <- total + prod(as.numeric(unlist((counts[string]))))*length(counts[string])
print(total)
for (child in children[string]) {
child_bag_counts(children, counts, string = child, total = total)
}
}
}
test <- child_bag_counts(children, counts)
child_bag_counts <- function(children, counts, string = "shiny gold", total = 0) {
if (is.null(counts[string])) {
total
}
else  {
print("proceeds")
total <- total + prod(as.numeric(unlist((counts[string]))))*length(counts[string])
print(total)
for (child in children[string]) {
child_bag_counts(children, counts, string = child, total = total)
}
}
}
test <- child_bag_counts(children, counts)
child_bag_counts <- function(children, counts, string = "shiny gold", total = 0) {
if (is.null(counts[string])) {
total
}
else  {
print("proceeds")
total <- total + prod(as.numeric(unlist((counts[string]))))*length(counts[string])
iters <- map(children[string], ~ child_bag_counts(children, counts, string = ., total = total))
}
iters
}
test <- child_bag_counts(children, counts)
child_bag_counts <- function(children, counts, string = "shiny gold", total = 0) {
if (is.null(counts[string])) {
total
}
else  {
print("proceeds")
total <- total + prod(as.numeric(unlist((counts[string]))))*length(counts[string])
iters <- map(children[string], ~ child_bag_counts(children, counts, string = ., total = total))
}
total
}
test <- child_bag_counts(children, counts)
child_bag_counts <- function(children, counts, string = "shiny gold", total = 0) {
if (is.null(counts[string])) {
total
}
else  {
print("proceeds")
total <- total + prod(as.numeric(unlist((counts[string]))))*length(counts[string])
map(children[string], ~ child_bag_counts(children, counts, string = ., total = total))
}
}
test <- child_bag_counts(children, counts)
child_bag_counts <- function(children, counts, string = "shiny gold", total = 0) {
if (is.null(counts[string])) {
total
}
else  {
total <- total + prod(as.numeric(unlist((counts[string]))))*length(counts[string])
map(children[string], ~ child_bag_counts(children, counts, string = ., total = total))
}
}
test <- child_bag_counts(children, counts)
test
child_bag_counts <- function(children, counts, string = "shiny gold", total = 0) {
if (is.null(counts[string])|is.na(counts[string])) {
total
}
else  {
total <- total + prod(as.numeric(unlist((counts[string]))))*length(counts[string])
map(children[string], ~ child_bag_counts(children, counts, string = ., total = total))
}
}
test <- child_bag_counts(children, counts)
child_bag_counts <- function(children, counts, string = "shiny gold", total = 0) {
if (is.null(counts[string][[1]])|is.na(counts[string][[1]])) {
total
}
else  {
total <- total + prod(as.numeric(unlist((counts[string]))))*length(counts[string])
map(children[string], ~ child_bag_counts(children, counts, string = ., total = total))
}
}
test <- child_bag_counts(children, counts)
child_bag_counts <- function(children, counts, string = "shiny gold", total = 0) {
if (is.null(counts[string][[1]])) {
total
}
else  {
total <- total + prod(as.numeric(unlist((counts[string]))))*length(counts[string])
map(children[string], ~ child_bag_counts(children, counts, string = ., total = total))
}
}
test <- child_bag_counts(children, counts)
child_bag_counts <- function(children, counts, string = "shiny gold", total = 0) {
if (is.null(counts[string])) {
total
}
else  {
total <- total + prod(as.numeric(unlist((counts[string]))))*length(counts[string])
map(children[string], ~ child_bag_counts(children, counts, string = ., total = total))
}
}
child_bag_counts <- function(children, counts, string = "shiny gold", total = 0) {
if (!string %in% names(counts)) {
total
}
else  {
total <- total + prod(as.numeric(unlist((counts[string]))))*length(counts[string])
map(children[string], ~ child_bag_counts(children, counts, string = ., total = total))
}
}
test <- child_bag_counts(children, counts)
child_bag_counts <- function(children, counts, string = "shiny gold", total = 0) {
if (!string %in% names(counts)) {
total
}
else  {
total <- total + prod(as.numeric(unlist((counts[string]))))*length(counts[string])
map(children[string], ~ function(result) if (is.null(.)) {
total
}
else {
child_bag_counts(children, counts, string = ., total = total))
child_bag_counts <- function(children, counts, string = "shiny gold", total = 0) {
if (!string %in% names(counts)) {
total
}
else  {
total <- total + prod(as.numeric(unlist((counts[string]))))*length(counts[string])
map(children[string], ~ function(result) if (is.null(.)) {
total
}
else {
child_bag_counts(children, counts, string = ., total = total)
})
}
}
test <- child_bag_counts(children, counts)
test
test$`shiny gold`()
test$`srcref`()
attr(test)
attributes(test)
View(test)
15*31*23*7*31*15*23
rstanarm::student_t(df = 1)
install.packages('rstanarm')
rstanarm::student_t(df = 1)
?rstanarm::student_t
?rstanarm::normal
?accumulate
